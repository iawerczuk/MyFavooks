{"ast":null,"code":"var _jsxFileName = \"/Users/iawerczuk/moje/MyFavooks/src/addToList/AddToBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport bookImg from \"../images/book.png\";\nimport { Link } from \"react-router-dom\";\nimport Trash from \"../actions/Trash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddToBooks() {\n  _s();\n\n  const host = \"http://localhost:3005\";\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [note, setNote] = useState('');\n  useEffect(() => {\n    fetch(`${host}/books`).then(result => result.json()).then(t => setTitle(t)).then(a => setAuthor(a)).then(n => setNote(n)).catch(err => console.warn(err));\n  }, []);\n\n  const handleAdd = e => {\n    e.preventDefault();\n\n    if (title.length < 2) {\n      alert(\"Tytuł jest za krótki\");\n    }\n\n    if (author.length < 3) {\n      alert(\"Nazwisko jest za krótkie\");\n    }\n\n    if (note.length > 100) {\n      alert(\"Notatka jest za długa\");\n    }\n\n    const book = {\n      id: 1,\n      title: \"Czas na języki\",\n      name: \"Scholz S.\",\n      note: \"wyd. PSC\",\n      paper: true,\n      ebook: false,\n      borrowed: false,\n      wishlist: false\n    };\n    fetch(`${host}/books`, {\n      method: \"POST\",\n      body: JSON.stringify(book),\n      headers: {\n        \"Content-Type\": 'application/json'\n      }\n    }).then(response => response.json()).then(title => setTitle(prev => [...prev, title])).then(author => setAuthor(prev => [...prev, author])).then(note => setNote(prev => [...prev, note])).catch(err => console.warn(err));\n    setTitle('');\n    setAuthor('');\n    setNote('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleAdd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-book\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"tytu\\u0142\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"autor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"author\",\n          value: author,\n          onChange: e => setAuthor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note\",\n          children: \"rekomendacje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"note\",\n          className: \"note\",\n          value: note,\n          onChange: e => setNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"image\",\n          className: \"btn\",\n          src: bookImg,\n          alt: \"dodaj do listy ksi\\u0105\\u017Cek\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: books.map((book, id) => {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          children: [book.title, \" \", book.author, \" \", book.note, /*#__PURE__*/_jsxDEV(Trash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 76\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddToBooks, \"W46mx1e+RzPu3/+vSviVMno0xrY=\");\n\n_c = AddToBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToBooks\");","map":{"version":3,"sources":["/Users/iawerczuk/moje/MyFavooks/src/addToList/AddToBooks.js"],"names":["React","useState","useEffect","bookImg","Link","Trash","AddToBooks","host","title","setTitle","author","setAuthor","note","setNote","fetch","then","result","json","t","a","n","catch","err","console","warn","handleAdd","e","preventDefault","length","alert","book","id","name","paper","ebook","borrowed","wishlist","method","body","JSON","stringify","headers","response","prev","target","value","books","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\n\nimport bookImg from \"../images/book.png\";\nimport {Link} from \"react-router-dom\";\nimport Trash from \"../actions/Trash\";\n\nexport default function AddToBooks() {\n\n    const host = \"http://localhost:3005\"\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [note, setNote] = useState('')\n\n    useEffect(() => {\n        fetch(`${host}/books`)\n            .then(result => result.json())\n            .then(t => setTitle(t))\n            .then(a => setAuthor(a))\n            .then(n => setNote(n))\n            .catch((err) => console.warn(err))\n    }, [])\n\n    const handleAdd = (e) => {\n        e.preventDefault();\n\n        if (title.length < 2) {\n            alert(\"Tytuł jest za krótki\");\n        }\n        if (author.length < 3) {\n            alert(\"Nazwisko jest za krótkie\");\n        }\n        if (note.length > 100) {\n            alert(\"Notatka jest za długa\");\n        }\n\n\n            const book = {\n                id: 1,\n                title: \"Czas na języki\",\n                name: \"Scholz S.\",\n                note: \"wyd. PSC\",\n                paper: true,\n                ebook: false,\n                borrowed: false,\n                wishlist: false,\n            }\n            fetch(`${host}/books`, {\n                method: \"POST\",\n                body: JSON.stringify(book),\n                headers: {\n                    \"Content-Type\": 'application/json'\n                }\n            })\n                .then((response) => response.json())\n                .then(title => setTitle(prev => ([\n                    ...prev,\n                    title])))\n                .then(author => setAuthor(prev => ([\n                    ...prev,\n                    author])))\n                .then(note => setNote(prev => ([\n                    ...prev,\n                    note])))\n                .catch((err) => console.warn(err))\n\n\n            setTitle('')\n            setAuthor('')\n            setNote('')\n        }\n\n        return (\n            <>\n            <form className=\"form\" onSubmit={handleAdd}>\n                <div className=\"form-book\">\n                    <label>tytuł</label>\n                    <input type=\"text\"\n                           name=\"title\"\n                           value={title}\n                           onChange={(e) => setTitle(e.target.value)}/>\n                    <label htmlFor=\"author\">autor</label>\n                    <input type=\"text\"\n                           name=\"author\"\n                           value={author}\n                           onChange={(e) => setAuthor(e.target.value)}/>\n                    <label htmlFor=\"note\">rekomendacje</label>\n                    <input type='text'\n                           name='note'\n                           className=\"note\"\n                           value={note}\n                           onChange={(e) => setNote(e.target.value)}/>\n                    <input type=\"image\" className=\"btn\" src={bookImg} alt=\"dodaj do listy książek\"/>\n                </div>\n            </form>\n                <ul className=\"list\">\n                    {books.map((book, id) => {\n                        <li key={id}>{book.title} {book.author} {book.note}<Trash/></li>\n                    })}\n                </ul>\n            </>\n        )\n    }"]},"metadata":{},"sourceType":"module"}