{"ast":null,"code":"var _jsxFileName = \"/Users/iawerczuk/moje/MyFavooks/src/lists/BooksList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddToBooks from \"../addToList/AddToBooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BooksList({\n  books,\n  onTrash\n}) {\n  _s();\n\n  const host = \"http://localhost:3005\";\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [note, setNote] = useState('');\n  useEffect(() => {\n    fetch(`${host}/books`).then(result => result.json()).then(t => setTitle(t)).then(a => setAuthor(a)).then(n => setNote(n)).catch(err => console.warn(err));\n  }, []);\n  const book = {\n    id: 1,\n    title: \"Czas na języki\",\n    name: \"Scholz S.\",\n    note: \"wyd. PSC\",\n    paper: true,\n    ebook: false,\n    borrowed: false,\n    wishlist: false\n  };\n  fetch(`${host}/books`, {\n    method: \"POST\",\n    body: JSON.stringify(book),\n    headers: {\n      \"Content-Type\": 'application/json'\n    }\n  }).then(response => response.json()).then(title => setTitle(prev => [...prev, title])).then(author => setAuthor(prev => [...prev, author])).then(note => setNote(prev => [...prev, note])).catch(err => console.warn(err));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: books.map((book, i) => /*#__PURE__*/_jsxDEV(AddToBooks, {\n      book: Books,\n      onTrash: onTrash\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n\n_s(BooksList, \"W46mx1e+RzPu3/+vSviVMno0xrY=\");\n\n_c = BooksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksList\");","map":{"version":3,"sources":["/Users/iawerczuk/moje/MyFavooks/src/lists/BooksList.js"],"names":["React","useState","AddToBooks","BooksList","books","onTrash","host","title","setTitle","author","setAuthor","note","setNote","useEffect","fetch","then","result","json","t","a","n","catch","err","console","warn","book","id","name","paper","ebook","borrowed","wishlist","method","body","JSON","stringify","headers","response","prev","map","i","Books"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAGA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAnB,EAAsC;AAAA;;AACjD,QAAMC,IAAI,GAAG,uBAAb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEAY,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAAE,GAAER,IAAK,QAAT,CAAL,CACKS,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADpB,EAEKF,IAFL,CAEUG,CAAC,IAAIV,QAAQ,CAACU,CAAD,CAFvB,EAGKH,IAHL,CAGUI,CAAC,IAAIT,SAAS,CAACS,CAAD,CAHxB,EAIKJ,IAJL,CAIUK,CAAC,IAAIR,OAAO,CAACQ,CAAD,CAJtB,EAKKC,KALL,CAKYC,GAAD,IAASC,OAAO,CAACC,IAAR,CAAaF,GAAb,CALpB;AAMH,GAPQ,EAON,EAPM,CAAT;AASQ,QAAMG,IAAI,GAAG;AACTC,IAAAA,EAAE,EAAE,CADK;AAETnB,IAAAA,KAAK,EAAE,gBAFE;AAGToB,IAAAA,IAAI,EAAE,WAHG;AAIThB,IAAAA,IAAI,EAAE,UAJG;AAKTiB,IAAAA,KAAK,EAAE,IALE;AAMTC,IAAAA,KAAK,EAAE,KANE;AAOTC,IAAAA,QAAQ,EAAE,KAPD;AAQTC,IAAAA,QAAQ,EAAE;AARD,GAAb;AAUAjB,EAAAA,KAAK,CAAE,GAAER,IAAK,QAAT,EAAkB;AACnB0B,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAFa;AAGnBW,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHU,GAAlB,CAAL,CAOKrB,IAPL,CAOWsB,QAAD,IAAcA,QAAQ,CAACpB,IAAT,EAPxB,EAQKF,IARL,CAQUR,KAAK,IAAIC,QAAQ,CAAC8B,IAAI,IAAK,CAC7B,GAAGA,IAD0B,EAE7B/B,KAF6B,CAAV,CAR3B,EAWKQ,IAXL,CAWUN,MAAM,IAAIC,SAAS,CAAC4B,IAAI,IAAK,CAC/B,GAAGA,IAD4B,EAE/B7B,MAF+B,CAAV,CAX7B,EAcKM,IAdL,CAcUJ,IAAI,IAAIC,OAAO,CAAC0B,IAAI,IAAK,CAC3B,GAAGA,IADwB,EAE3B3B,IAF2B,CAAV,CAdzB,EAiBKU,KAjBL,CAiBYC,GAAD,IAASC,OAAO,CAACC,IAAR,CAAaF,GAAb,CAjBpB;AAmBR,sBACQ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACKlB,KAAK,CAACmC,GAAN,CAAU,CAACd,IAAD,EAAOe,CAAP,kBACP,QAAC,UAAD;AAAoB,MAAA,IAAI,EAAEC,KAA1B;AAAiC,MAAA,OAAO,EAAEpC;AAA1C,OAAiBmC,CAAjB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADR;AAOH;;GAnDuBrC,S;;KAAAA,S","sourcesContent":["import React, {useState } from \"react\";\nimport AddToBooks from \"../addToList/AddToBooks\";\n\n\nexport default function BooksList({ books, onTrash}) {\n    const host = \"http://localhost:3005\"\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [note, setNote] = useState('')\n\n    useEffect(() => {\n        fetch(`${host}/books`)\n            .then(result => result.json())\n            .then(t => setTitle(t))\n            .then(a => setAuthor(a))\n            .then(n => setNote(n))\n            .catch((err) => console.warn(err))\n    }, [])\n\n            const book = {\n                id: 1,\n                title: \"Czas na języki\",\n                name: \"Scholz S.\",\n                note: \"wyd. PSC\",\n                paper: true,\n                ebook: false,\n                borrowed: false,\n                wishlist: false,\n            }\n            fetch(`${host}/books`, {\n                method: \"POST\",\n                body: JSON.stringify(book),\n                headers: {\n                    \"Content-Type\": 'application/json'\n                }\n            })\n                .then((response) => response.json())\n                .then(title => setTitle(prev => ([\n                    ...prev,\n                    title])))\n                .then(author => setAuthor(prev => ([\n                    ...prev,\n                    author])))\n                .then(note => setNote(prev => ([\n                    ...prev,\n                    note])))\n                .catch((err) => console.warn(err))\n\n    return (\n            <div className=\"main\">\n                {books.map((book, i) => (\n                    <AddToBooks key={i} book={Books} onTrash={onTrash} />\n                        ))}\n            </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}