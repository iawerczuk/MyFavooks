{"ast":null,"code":"var _jsxFileName = \"/Users/iawerczuk/moje/MyFavooks/src/actions/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [];\nexport default function Search() {\n  _s();\n\n  const [searchPhrase, setSearchPhrase] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleChange = event => {\n    setSearchPhrase(event.target.value);\n  };\n\n  useEffect(() => {\n    const results = words.filter(word => word.includes(searchPhrase));\n    setSearchResults(results);\n  }, [searchPhrase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      value: searchPhrase,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"bRCFxWOVzHhXZXU448PNgZ0soiI=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/iawerczuk/moje/MyFavooks/src/actions/Search.js"],"names":["React","useState","useEffect","words","Search","searchPhrase","setSearchPhrase","searchResults","setSearchResults","handleChange","event","target","value","results","filter","word","includes","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAC,EAAZ;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAmCP,QAAQ,CAAC,EAAD,CAAjD;;AACA,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC1BJ,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,OAAO,GAAGV,KAAK,CAACW,MAAN,CAAaC,IAAI,IAC7BA,IAAI,CAACC,QAAL,CAAcX,YAAd,CADY,CAAhB;AAGAG,IAAAA,gBAAgB,CAACK,OAAD,CAAhB;AACH,GALQ,EAKN,CAACR,YAAD,CALM,CAAT;AAOA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,QAA/B;AAAwC,MAAA,KAAK,EAAEA,YAA/C;AAA6D,MAAA,QAAQ,EAAEI;AAAvE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKF,aAAa,CAACU,GAAd,CAAkBC,IAAI,iBACnB;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAvBuBd,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst words=[];\nexport default function Search() {\n    const [searchPhrase, setSearchPhrase] = useState(\"\");\n    const [searchResults, setSearchResults] =useState([]);\n    const handleChange = event => {\n        setSearchPhrase(event.target.value);\n    };\n    useEffect(() => {\n        const results = words.filter(word =>\n            word.includes(searchPhrase)\n        );\n        setSearchResults(results);\n    }, [searchPhrase]);\n\n    return (\n        <div>\n            <input type=\"text\" placeholder=\"Search\" value={searchPhrase} onChange={handleChange}/>\n            <ul>\n                {searchResults.map(item => (\n                    <li>{item}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}