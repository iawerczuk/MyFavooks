{"ast":null,"code":"var _jsxFileName = \"/Users/iawerczuk/moje/MyFavooks/src/actions/Trash.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport trash from \"../images/trash.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Trash() {\n  _s();\n\n  const host = \"http://localhost:3000\";\n  const [title, setTitle] = useState(null);\n  useEffect(() => {\n    fetch(`${host}/bookslist`).then(result => result.json()).then(books => setBooks(books));\n  }, []);\n\n  const handleTrash = title => {\n    fetch(`${host}/books/${title}`, {\n      method: \"DELETE\"\n    }).then(() => setBooks(prev => prev.filter(el => el.title !== title))).catch(err => console.warn(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trash\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: bookState.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => handleTrash(el.title),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: trash,\n              alt: \"usu\\u0144\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 85\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, el.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n} // export default function Trash(book) {\n//\n// const [bookState, setBookState] = useState([]);\n//\n// const handleDelete = (id) => {\n//     setBookState((prev) => prev.filter((el) => el.id !== id));\n// };\n\n_s(Trash, \"x7eafJRhXdwiJPQB4Wx/4DG2Ryg=\");\n\n_c = Trash;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trash\");","map":{"version":3,"sources":["/Users/iawerczuk/moje/MyFavooks/src/actions/Trash.js"],"names":["React","useState","useEffect","Trash","host","title","setTitle","fetch","then","result","json","books","setBooks","handleTrash","method","prev","filter","el","catch","err","console","warn","bookState","map","trash"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE5B,QAAMC,IAAI,GAAC,uBAAX;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAE,GAAEH,IAAK,YAAT,CAAL,CACKI,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADpB,EAEKF,IAFL,CAEUG,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAF3B;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAKA,QAAME,WAAW,GAAIR,KAAD,IAAW;AAC3BE,IAAAA,KAAK,CAAE,GAAEH,IAAK,UAASC,KAAM,EAAxB,EAA2B;AAC5BS,MAAAA,MAAM,EAAC;AADqB,KAA3B,CAAL,CAGKN,IAHL,CAGU,MAAMI,QAAQ,CAACG,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYC,EAAE,IAAEA,EAAE,CAACZ,KAAH,KAAaA,KAA7B,CAAT,CAHxB,EAIKa,KAJL,CAIYC,GAAD,IAASC,OAAO,CAACC,IAAR,CAAaF,GAAb,CAJpB;AAKH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI;AAAA,gBACKG,SAAS,CAACC,GAAV,CAAeN,EAAD,IAAQ;AACnB,4BAAO;AAAA,iCACH;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAMJ,WAAW,CAACI,EAAE,CAACZ,KAAJ,CAAhD;AAAA,mCAA4D;AAAK,cAAA,GAAG,EAAGmB,KAAX;AAAmB,cAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AAA5D;AAAA;AAAA;AAAA;AAAA;AADG,WAASP,EAAE,CAACZ,KAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEM,OAHT;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,C,CAGG;AACJ;AACA;AACA;AACA;AACA;AACA;;GArCwBF,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport trash from \"../images/trash.svg\";\nexport default function Trash() {\n\n    const host=\"http://localhost:3000\"\n    const [title, setTitle]=useState(null);\n\n    useEffect(() => {\n        fetch(`${host}/bookslist`)\n            .then(result => result.json())\n            .then(books => setBooks(books))\n    },[])\n    const handleTrash = (title) => {\n        fetch(`${host}/books/${title}`, {\n            method:\"DELETE\"\n        })\n            .then(() => setBooks(prev => prev.filter(el=>el.title !== title)))\n            .catch((err) => console.warn(err))\n    }\n\n    return (\n        <div className=\"trash\">\n            <ul>\n                {bookState.map((el) => {\n                    return <li key={el.title}>\n                        <button type=\"submit\" onClick={() => handleTrash(el.title)}><img src={ trash } alt=\"usuÅ„\"/></button>\n                    </li>})}\n            </ul>\n        </div>\n);\n}\n\n\n    // export default function Trash(book) {\n//\n// const [bookState, setBookState] = useState([]);\n//\n// const handleDelete = (id) => {\n//     setBookState((prev) => prev.filter((el) => el.id !== id));\n// };"]},"metadata":{},"sourceType":"module"}